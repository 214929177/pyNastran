#os:
# - linux
# - osx

dist: xenial
git:
  quiet: true
language: python
#python:
#  - '3.6'
#  - '3.7'
  #  # https://github.com/travis-ci/travis-ci/issues/9815
  #  dist: xenial
  #  sudo: true
#  - "3.5-dev" # 3.5 development branch
#  - "nightly" # currently points to 3.6-dev

# numpy:
#  - 1.12 min for 3.6 (bumped for reqs)
#  - 1.15 min for 3.7
# scipy:
#  - 0.19 min for 3.6
#  - ???  min for 3.7
# matplotlib:
#  - 2.1 min for 3.6
#  - 2.2 min for 3.7
matrix:
  include:
      # latest versions of package
    - name: "Python 3.6"
      python: '3.6'
      env:
      - NUMPY='numpy scipy matplotlib h5py vtk pyqt'

    - name: "Python 3.7"
      python: '3.7'
      env:
      - NUMPY='numpy scipy matplotlib h5py vtk pyqt'

      # old versions of packages
    - name: "Python 3.6 old packages"
      python: '3.6'
      env:
      # - bumped numpy from 1.13 to 1.14 to fix unicode savetxt writing
      # - no pyside2
      - NUMPY='numpy=1.14 scipy=0.19 matplotlib=2.0 h5py vtk pyqt'

    - name: "Python 3.7 old packages"
      python: '3.7'
      env:
      #- NUMPY='numpy=1.15 scipy=0.19 matplotlib=2.2'  # doesn't work
      # - bumped scipy from 1.0 to 1.1 for compatibility with numpy
      # - no pyside2
      - NUMPY='numpy=1.14 scipy=1.1 matplotlib=2.2 h5py vtk pyqt'

    - name: "Python 3.7 (no gui)"
      python: '3.7'
      env:
      - NUMPY='numpy scipy'
      - NOGUI='_no_gui'

#-------------------------------------------------
# old-A

#before_install:
#  - sudo apt-get update -qq
#  - sudo apt-get install -qq python-dev python-setuptools  python3-dev python3-setuptools libblas-dev liblapack-dev libatlas-base-dev gfortran
#
# command to install dependencies
#install: "pip install -r requirements.txt"
#
# command to run tests
#script: nosetests
#script: "python pyNastran/all_tests.py"
#-------------------------------------------------
#new-B
# per https://gist.github.com/dan-blanchard/7045057

#notifications:
#  email: false

# Setup anaconda
before_install:
 - sudo -H pip install auxlib
 - sudo pip install conda


# per http://conda.pydata.org/docs/travis.html
install:
  - echo "python=$TRAVIS_PYTHON_VERSION atlas ${NUMPY} pandas"
  - sudo apt-get update
  - sudo apt-get install gfortran

  # We do this conditionally because it saves us some downloading if the
  # version is the same.

   # not using latest because random crashes (2016/3/23)
   #wget https://repo.continuum.io/miniconda/Miniconda-latest-Linux-x86_64.sh -O miniconda.sh;
   #wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;

    # 4.1.11 -> 4.5.4 (2018/8/19)
  - wget https://repo.continuum.io/miniconda/Miniconda3-4.5.4-Linux-x86_64.sh -O miniconda.sh;
  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"
  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
  # Useful for debugging any issues with conda
  - conda info -a

  - conda install psutil pip
#  - pip install coveralls

  # install dependencies
  # if line per https://docs.travis-ci.com/user/multi-os/
  - echo "python version=$TRAVIS_PYTHON_VERSION"

  # numpy 1.14.2; pandas is fine: 0.22.0
#  - if [[ "$TRAVIS_JOB_NAME"]]

#  - if [[ "$TRAVIS_PYTHON_VERSION" == "3.6" ]];     then conda create -q -n test-environment python=$TRAVIS_PYTHON_VERSION atlas numpy>=1.12 scipy matplotlib pandas      h5py vtk pyqt; fi
#  - if [[ "$TRAVIS_PYTHON_VERSION" == "3.7" ]];     then conda create -q -n test-environment python=$TRAVIS_PYTHON_VERSION atlas numpy>=1.12 scipy matplotlib pandas      h5py vtk pyqt; fi
#  - if [[ "$TRAVIS_PYTHON_VERSION" == "nightly" ]]; then conda create -q -n test-environment python=$TRAVIS_PYTHON_VERSION atlas numpy<1.13  scipy matplotlib pandas; fi

  - conda create -q -n test-environment python=$TRAVIS_PYTHON_VERSION atlas ${NUMPY} pandas
  - source activate test-environment
#  - conda install python-coveralls
  - conda list
  - python setup${NOGUI}.py develop


# Run test
script:
  #- nosetests --with-cov --cov YOUR_PACKAGE_NAME_HERE --cov-config .coveragerc --logging-level=INFO
  - coverage run pyNastran/all_tests${NOGUI}.py

  # good
  #- "python pyNastran/all_tests.py"
  #- "python -m coverage run pyNastran/all_tests_no_gui.py"

  # good
  #- "coverage run pyNastran/all_tests_no_gui.py"

# https://github.com/z4r/python-coveralls
# Calculate coverage
after_success:
  - coveralls debug
#  - codecov
#after_success:
#  - coveralls --config_file .coveragerc
