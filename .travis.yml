#os:
# - linux
# - osx

language: python
python:
#  - "2.6"
  - "2.7"
  - "3.3"
  - "3.4"
  - "3.5"
#  - "3.5-dev" # 3.5 development branch
#  - "nightly" # currently points to 3.6-dev

#-------------------------------------------------
# old-A

#before_install:
#  - sudo apt-get update -qq
#  - sudo apt-get install -qq python-dev python-setuptools  python3-dev python3-setuptools libblas-dev liblapack-dev libatlas-base-dev gfortran
#
# command to install dependencies
#install: "pip install -r requirements.txt"
#
# command to run tests
#script: nosetests
#script: "python pyNastran/all_tests.py"
#-------------------------------------------------
#new-B
# per https://gist.github.com/dan-blanchard/7045057

#notifications:
#  email: false

# Setup anaconda
before_install:
 - sudo -H pip install auxlib
 - sudo pip install conda

#install 2:
#  - sudo conda init
#    # Install packages
#  - sudo conda update conda --yes
#  - conda install --yes python=$TRAVIS_PYTHON_VERSION atlas numpy scipy vtk
#  - export PATH=$HOME/py/bin:$PATH
#  - python setup.py develop

# per http://conda.pydata.org/docs/travis.html
install:
  - sudo apt-get update
  # We do this conditionally because it saves us some downloading if the
  # version is the same.

   # v4.0 (latest) has a problem with auxlib, so switching to 3.19.0 (2016/3/23)
   #wget https://repo.continuum.io/miniconda/Miniconda-latest-Linux-x86_64.sh -O miniconda.sh;
   #wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;

  - if [[ "$TRAVIS_PYTHON_VERSION" == "2.7" ]]; then
      wget https://repo.continuum.io/miniconda/Miniconda2-3.19.0-Linux-x86_64.sh -O miniconda.sh;
    else
      wget https://repo.continuum.io/miniconda/Miniconda3-3.19.0-Linux-x86_64.sh -O miniconda.sh;
    fi
  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"
  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
  # Useful for debugging any issues with conda
  - conda info -a

  # install dependencies
  # if line per https://docs.travis-ci.com/user/multi-os/
  - echo "python version=$TRAVIS_PYTHON_VERSION"
  - if [[ "$TRAVIS_PYTHON_VERSION" == "2.7" ]];     then conda create -q -n test-environment python=$TRAVIS_PYTHON_VERSION atlas numpy scipy pandas vtk; fi
  - if [[ "$TRAVIS_PYTHON_VERSION" == "3.3" ]];     then conda create -q -n test-environment python=$TRAVIS_PYTHON_VERSION atlas numpy scipy pandas; fi
  - if [[ "$TRAVIS_PYTHON_VERSION" == "3.4" ]];     then conda create -q -n test-environment python=$TRAVIS_PYTHON_VERSION atlas numpy scipy pandas; fi
  - if [[ "$TRAVIS_PYTHON_VERSION" == "3.5" ]];     then conda create -q -n test-environment python=$TRAVIS_PYTHON_VERSION atlas numpy scipy pandas; fi
  - if [[ "$TRAVIS_PYTHON_VERSION" == "nightly" ]]; then conda create -q -n test-environment python=$TRAVIS_PYTHON_VERSION atlas numpy scipy pandas; fi
  - source activate test-environment
  - python setup.py develop


# Run test
script:
  #- nosetests --with-cov --cov YOUR_PACKAGE_NAME_HERE --cov-config .coveragerc --logging-level=INFO
  - "python pyNastran/all_tests_no_gui.py"

# https://github.com/z4r/python-coveralls
# Calculate coverage
#after_success:
#  - coveralls
#after_success:
#  - coveralls --config_file .coveragerc